searchState.loadedDescShard("arrow_flight", 0, "A native Rust implementation of Apache Arrow Flight for …\nAn opaque action specific for the service.\nDescribes an available action, including both the name …\nA message for doing simple auth.\nThe request of the CancelFlightInfo action.\nThe result of the CancelFlightInfo action.\nThe result of a cancel operation.\nThe cancellation request is complete. Subsequent requests …\nThe cancellation request is in progress. The client may …\nA service specific expression that can be used to return a …\nContains the error value\nA batch of Arrow data as part of a stream of batches.\nThe name or tag for a Flight. May be used as a way to …\nA particular stream or split associated with a flight.\nThe access coordinates for retrieval of a dataset. With a …\nThe request that a client provides to a server on …\nIpcMessage represents a <code>Schema</code> in the format expected in …\nA location where a Flight service will accept retrieval of …\nThe query is not cancellable. The client should not retry …\nContains the success value\nThe information to process a long-running query.\nThe response message associated with the submission of a …\nThe request of the RenewFlightEndpoint action.\nAn opaque result returned after executing an action.\nSchemaAsIpc represents a pairing of a <code>Schema</code> with …\nWrap the result of a getSchema call\nAn opaque identifier that the service can use to retrieve …\nThe cancellation status is unknown. Servers should avoid …\nApplication-defined metadata.\nApplication-defined metadata.\nApplication-defined metadata.\nMid Level <code>FlightClient</code>\nOpaque value used to express a command. Should only be …\nThe actual batch of Arrow data. Preferably handled with …\nHeader for message data as described in …\nDecoder to create <code>RecordBatch</code> streams from <code>FlightData</code> …\nEncoder to create <code>FlightData</code> streams from <code>RecordBatch</code> …\nA list of endpoints associated with the flight. To consume …\nCommon error types\nExpiration time for this request. After this passes, the …\nExpiration time of this stream. If present, clients may …\nDefines a <code>Flight</code> for generation or retrieval.\nThe descriptor associated with this info.\nThe descriptor the client should use on the next try. If …\nThe descriptor of the data. This is only relevant when a …\nLow Level tonic <code>FlightServiceClient</code>.\nLow Level tonic <code>FlightServiceServer</code> and <code>FlightService</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe currently available results.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLimits the output of value to limit…\nA list of URIs where this ticket can be redeemed via …\nCreate a new <code>SchemaAsIpc</code> from a <code>Schema</code> and <code>IpcWriteOptions</code>\nCreate a new Action with type and body\nCreate a new <code>CancelFlightInfoRequest</code>, providing the …\nCreate a new <code>RenewFlightEndpointRequest</code>, providing the …\nCreate a new Result with the specified body\nCreate a new <code>CancelFlightInfoResult</code> from the provided …\nCreate a new, empty <code>FlightInfo</code>, describing where to fetch …\nCreate a new, empty <code>PollInfo</code>, providing information for a …\nCreate a new, empty <code>FlightEndpoint</code> that represents a …\nCreate a new <code>Ticket</code>\nCreate a new <code>FlightData</code>.\nCreate a new opaque command <code>CMD</code> <code>FlightDescriptor</code> to …\nCreate a new named path <code>PATH</code> <code>FlightDescriptor</code> that …\nFlightEndpoints are in the same order as the data.\nData type representing a schema and its IPC write options\nList of strings identifying a particular dataset. Should …\nArbitrary auth/handshake info.\nArbitrary auth/handshake info.\nQuery progress. If known, must be in [0.0, 1.0] but need …\nA defined protocol version\nA defined protocol version\nThe schema of the dataset in its IPC form: 4 bytes - an …\nThe schema of the dataset in its IPC form: 4 bytes - an …\nSupport for execute SQL queries using Apache Arrow Flight …\n<code>FallibleRequestStream</code> and <code>FallibleTonicResponseStream</code> …\nToken used to retrieve this stream.\nSet these to -1 if unknown.\nHelper to extract HTTP/gRPC trailers from a tonic stream.\nTry and convert the data in this  <code>FlightInfo</code> into a <code>Schema</code>\nSet the query progress if known. Must be in the range […\nSpecify the schema for the response.\nUtilities to assist with reading and writing Arrow data as …\nAdd optional application specific metadata to the message\nAdd optional application specific metadata to the message\nAdd optional application specific metadata to the message\nAdd a data body. See <code>IpcDataGenerator</code> to create this data.\nAdd a data header\nAdd a <code>FlightDescriptor</code> describing what this data is\nAdd a <code>FlightDescriptor</code> that the client should use for the …\nAdd a <code>FlightDescriptor</code> describing the data\nAdd specific a endpoint for fetching the data\nSpecify expiration time for this request\nSpecify expiration time for this stream\nAdd the current available results for the poll call as a …\nAdd a location <code>uri</code> to this endpoint. Note each endpoint can\nSpecify if the response is ordered across endpoints\nSet the <code>Ticket</code> used to retrieve data from the endpoint\nSet the number of bytes in the result, if known\nSet the number of records in the result, if known\nA “Mid level” Apache Arrow Flight client.\nAdd the specified header with value to all subsequent …\nMake a <code>CancelFlightInfo</code> call to the server and return a …\nMake a <code>DoAction</code> call to the server and returning a <code>Stream</code> …\nMake a <code>DoExchange</code> call to the server with the provided …\nMake a <code>DoGet</code> call to the server with the provided ticket, …\nMake a <code>DoPut</code> call to the server with the provided <code>Stream</code> …\nReturns the argument unchanged.\nMake a <code>GetFlightInfo</code> call to the server with the provided …\nMake a <code>GetSchema</code> call to the server with the provided …\nPerform an Arrow Flight handshake with the server, sending …\nReturn a reference to the underlying tonic …\nThe inner client\nReturn a mutable reference to the underlying tonic …\nCalls <code>U::from(self)</code>.\nConsume this client and return the underlying tonic …\nMake a <code>ListActions</code> call to the server and returning a …\nMake a <code>ListFlights</code> call to the server with the provided …\nreturn a Request, adding any configured metadata\nReturn a reference to gRPC metadata included with each …\nOptional grpc header metadata to include with each request\nReturn a reference to gRPC metadata included with each …\nCreates a client client with the provided <code>Channel</code>\nCreates a new higher level client with the provided lower …\nMake a <code>PollFlightInfo</code> call to the server with the provided …\nMake a <code>RenewFlightEndpoint</code> call to the server and return …\nFlightData and the decoded payload (Schema, RecordBatch), …\nThe result of decoding <code>FlightData</code>\nWrapper around a stream of <code>FlightData</code> that handles the …\nDecodes a Stream of <code>FlightData</code> back into <code>RecordBatch</code>es. …\ntracks the state needed to reconstruct <code>RecordBatch</code>es from a\nNone (no data was sent in the corresponding FlightData)\nA decoded Record batch.\nA decoded Schema message\nReturn the metadata field of the inner flight data\nSeen the end of the inner stream?\nExtracts flight data from the next message, updating …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHeaders attached to this stream.\nOptional grpc header metadata.\nThe original FlightData message\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsume self and return the wrapped <code>FlightDataDecoder</code>\nCreate a new wrapper around the stream of <code>FlightData</code>\nCreate a new <code>FlightRecordBatchStream</code> from a decoded stream\nCreate a new <code>FlightRecordBatchStream</code> from a stream of …\nCreate a new DecodedFlightData with no payload\nCreate a new <code>DecodedFlightData</code> with a <code>RecordBatch</code> payload\nCreate a new DecodedFlightData with a <code>Schema</code> payload\nThe decoded payload\nReturns the result of decoding the next <code>FlightData</code> message …\nReturns the next <code>RecordBatch</code> available in this stream, or …\nUnderlying data stream\nReturns the current schema for this stream\nReturn schema for the stream, if it has been received\nDecoding state\nTrailers attached to this stream.\nOptional grpc trailer metadata.\nRecord response headers.\nRecord response trailers.\nDefines how a <code>FlightDataEncoder</code> encodes <code>DictionaryArray</code>s\nStream that encodes a stream of record batches to flight …\nCreates a <code>Stream</code> of <code>FlightData</code>s from a <code>Stream</code> of <code>Result</code>&lt;…\nThe data needed to encode a stream of flight data, holding …\nDefault target size for encoded <code>FlightData</code>.\nExpands to the underlying type (default). This likely …\nSend dictionary FlightData with every RecordBatch that …\noptional metadata to add to schema FlightData\nMetadata to add to the schema message\nTakes a <code>Stream</code> of <code>Result&lt;RecordBatch&gt;</code> and returns a <code>Stream</code> …\ncleared after the first FlightData message is sent\nOptional flight descriptor, if known before data.\nDeterimines how <code>DictionaryArray</code>s are encoded for transport.\nDeterimines how <code>DictionaryArray</code>s are encoded for transport.\nIs this stream done (inner is empty or errored)\nEncodes batch into one or more <code>FlightData</code> messages in …\nConvert a <code>RecordBatch</code> to a Vec of <code>FlightData</code> representing …\nEncodes schema as a <code>FlightData</code> in self.queue. Updates …\nEncode a schema as a FlightData\ndo the encoding / tracking of dictionaries\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHydrates any dictionaries arrays in <code>batch</code> to its …\nHydrates a dictionary to its underlying type.\nInput stream\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReport the schema of the encoded data when known. A schema …\nTarget maximum size of flight data (see details on …\nThe maximum approximate target message size in bytes (see …\nCreate a new <code>FlightDataEncoderBuilder</code>.\nIpc writer options\nPrepare an arrow Schema for transport over the Arrow …\ndata queued up to send but not yet sent\nPlace the <code>FlightData</code> in the queue to send\nPlace the <code>FlightData</code> in the queue to send\nschema, set after the first batch\nOptional schema, if known before data.\nSplit <code>RecordBatch</code> so it hopefully fits into a gRPC …\nSet <code>DictionaryHandling</code> for encoder\nSpecify a flight descriptor in the first FlightData …\nSet the (approximate) maximum size, in bytes, of the …\nSpecify application specific metadata included in the …\nSet the <code>IpcWriteOptions</code> used to encode the <code>RecordBatch</code>es …\nSpecify a schema for the RecordBatches being sent. If a …\nUnderlying arrow error\nAn error occurred during decoding\nContains the error value\nExternal error that can provide source of error by calling …\nErrors for the Apache Arrow Flight crate\nReturned when functionality is not yet available.\nContains the success value\nSome unexpected message was received\nResult type for the Apache Arrow Flight crate\nError from the underlying tonic library\nReturns the argument unchanged.\nWraps an external error in an <code>ArrowError</code>.\nCalls <code>U::from(self)</code>.\nGenerate a new <code>FlightError::ProtocolError</code> variant.\nAn opaque command to generate a dataset.\nDescribes what type of descriptor is defined.\nA named path that identifies a dataset. A path is composed …\nProtobuf pattern, not used.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA flight service is an endpoint for retrieving or storing …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nServer streaming response type for the DoAction method.\nServer streaming response type for the DoExchange method.\nServer streaming response type for the DoGet method.\nServer streaming response type for the DoPut method.\nGenerated trait containing gRPC methods that should be …\nA flight service is an endpoint for retrieving or storing …\nServer streaming response type for the Handshake method.\nServer streaming response type for the ListActions method.\nServer streaming response type for the ListFlights method.\nFlight services can support an arbitrary number of simple …\nOpen a bidirectional data channel for a given descriptor. …\nRetrieve a single stream associated with a particular …\nPush a stream to the flight service associated with a …\nReturns the argument unchanged.\nFor a given FlightDescriptor, get information about how …\nFor a given FlightDescriptor, get the Schema as described …\nHandshake between client and server. Depending on the …\nCalls <code>U::from(self)</code>.\nA flight service exposes all of the available action types …\nGet a list of available streams given a particular …\nFor a given FlightDescriptor, start a query and get …\nAn opaque action specific for the service.\nDescribes an available action, including both the name …\nA message for doing simple auth.\nThe request of the CancelFlightInfo action.\nThe result of the CancelFlightInfo action.\nThe result of a cancel operation.\nThe cancellation request is complete. Subsequent requests …\nThe cancellation request is in progress. The client may …\nA service specific expression that can be used to return a …\nA batch of Arrow data as part of a stream of batches.\nThe name or tag for a Flight. May be used as a way to …\nA particular stream or split associated with a flight.\nThe access coordinates for retrieval of a dataset. With a …\nThe request that a client provides to a server on …\nA location where a Flight service will accept retrieval of …\nThe query is not cancellable. The client should not retry …\nThe information to process a long-running query.\nThe response message associated with the submission of a …\nThe request of the RenewFlightEndpoint action.\nAn opaque result returned after executing an action.\nWrap the result of a getSchema call\nAn opaque identifier that the service can use to retrieve …\nThe cancellation status is unknown. Servers should avoid …\nApplication-defined metadata.\nApplication-defined metadata.\nApplication-defined metadata.\nString value of the enum field names used in the ProtoBuf …\nOpaque value used to express a command. Should only be …\nThe actual batch of Arrow data. Preferably handled with …\nHeader for message data as described in …\nA list of endpoints associated with the flight. To consume …\nExpiration time for this request. After this passes, the …\nExpiration time of this stream. If present, clients may …\nNested message and enum types in <code>FlightDescriptor</code>.\nThe descriptor associated with this info.\nThe descriptor the client should use on the next try. If …\nThe descriptor of the data. This is only relevant when a …\nGenerated client implementations.\nGenerated server implementations.\nConverts an <code>i32</code> to a <code>CancelStatus</code>, or <code>None</code> if <code>value</code> is not …\nCreates an enum from field names used in the ProtoBuf …\nThe currently available results.\nReturns <code>true</code> if <code>value</code> is a variant of <code>CancelStatus</code>.\nA list of URIs where this ticket can be redeemed via …\nFlightEndpoints are in the same order as the data.\nList of strings identifying a particular dataset. Should …\nArbitrary auth/handshake info.\nArbitrary auth/handshake info.\nReturns the value of <code>progress</code>, or the default value if …\nQuery progress. If known, must be in [0.0, 1.0] but need …\nA defined protocol version\nA defined protocol version\nThe schema of the dataset in its IPC form: 4 bytes - an …\nThe schema of the dataset in its IPC form: 4 bytes - an …\nSets <code>status</code> to the provided enum value.\nSets <code>type</code> to the provided enum value.\nReturns the enum value of <code>status</code>, or the default if the …\nToken used to retrieve this stream.\nSet these to -1 if unknown.\nReturns the enum value of <code>type</code>, or the default if the …\nAn opaque command to generate a dataset.\nDescribes what type of descriptor is defined.\nA named path that identifies a dataset. A path is composed …\nProtobuf pattern, not used.\nString value of the enum field names used in the ProtoBuf …\nConverts an <code>i32</code> to a <code>DescriptorType</code>, or <code>None</code> if <code>value</code> is …\nCreates an enum from field names used in the ProtoBuf …\nReturns <code>true</code> if <code>value</code> is a variant of <code>DescriptorType</code>.\nA flight service is an endpoint for retrieving or storing …\nEnable decompressing responses.\nAttempt to create a new client by connecting to a given …\nFlight services can support an arbitrary number of simple …\nOpen a bidirectional data channel for a given descriptor. …\nRetrieve a single stream associated with a particular …\nPush a stream to the flight service associated with a …\nFor a given FlightDescriptor, get information about how …\nFor a given FlightDescriptor, get the Schema as described …\nHandshake between client and server. Depending on the …\nA flight service exposes all of the available action types …\nGet a list of available streams given a particular …\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nFor a given FlightDescriptor, start a query and get …\nCompress requests with the given encoding.\nServer streaming response type for the DoAction method.\nServer streaming response type for the DoExchange method.\nServer streaming response type for the DoGet method.\nServer streaming response type for the DoPut method.\nGenerated trait containing gRPC methods that should be …\nA flight service is an endpoint for retrieving or storing …\nServer streaming response type for the Handshake method.\nServer streaming response type for the ListActions method.\nServer streaming response type for the ListFlights method.\nGenerated gRPC service name\nEnable decompressing requests with the given encoding.\nFlight services can support an arbitrary number of simple …\nOpen a bidirectional data channel for a given descriptor. …\nRetrieve a single stream associated with a particular …\nPush a stream to the flight service associated with a …\nFor a given FlightDescriptor, get information about how …\nFor a given FlightDescriptor, get the Schema as described …\nHandshake between client and server. Depending on the …\nA flight service exposes all of the available action types …\nGet a list of available streams given a particular …\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nFor a given FlightDescriptor, start a query and get …\nCompress responses with the given encoding, if the client …\nRequest message for the “BeginSavepoint” action. …\nActionBeginSavepointRequestvariant\nThe result of a “BeginSavepoint” action.\nActionBeginSavepointResultvariant\nRequest message for the “BeginTransaction” action. …\nActionBeginTransactionRequestvariant\nThe result of a “BeginTransaction” action.\nActionBeginTransactionResultvariant\nRequest message for the “CancelQuery” action.\nActionCancelQueryRequestvariant\nThe result of cancelling a query.\nActionCancelQueryResultvariant\nRequest message for the “ClosePreparedStatement” …\nActionClosePreparedStatementRequestvariant\nRequest message for the “CreatePreparedStatement” …\nActionCreatePreparedStatementRequestvariant\nWrap the result of a “CreatePreparedStatement” or “…\nActionCreatePreparedStatementResultvariant\nRequest message for the “CreatePreparedSubstraitPlan” …\nActionCreatePreparedSubstraitPlanRequestvariant\nRequest message for the “EndSavepoint” action.\nActionEndSavepointRequestvariant\nRequest message for the “EndTransaction” action.\nActionEndTransactionRequestvariant\nAn implementation of the protobuf <code>Any</code> message type\nAppend to the table if it already exists\nIndicates that the column can be used In a WHERE clause …\nIndicates that the column can be used in a WHERE clause if …\nHelper to convert to/from protobuf <code>Any</code> message to a …\nRepresents a request to retrieve the list of catalogs on a …\nCommandGetCatalogsvariant\nRepresents a request to retrieve a description of the …\nCommandGetCrossReferencevariant\nRepresents a request to retrieve the list of database …\nCommandGetDbSchemasvariant\nRepresents a request to retrieve a description of the …\nCommandGetExportedKeysvariant\nRepresents a request to retrieve the foreign keys of a …\nCommandGetImportedKeysvariant\nRepresents a request to retrieve the primary keys of a …\nCommandGetPrimaryKeysvariant\nRepresents a metadata request. Used in the command member …\nCommandGetSqlInfovariant\nRepresents a request to retrieve the list of table types …\nCommandGetTableTypesvariant\nRepresents a request to retrieve the list of tables, and …\nCommandGetTablesvariant\nRepresents a request to retrieve information about data …\nCommandGetXdbcTypeInfovariant\nRepresents an instance of executing a prepared statement. …\nCommandPreparedStatementQueryvariant\nRepresents a SQL update query. Used in the command member …\nCommandPreparedStatementUpdatevariant\nRepresents a bulk ingestion request. Used in the command …\nCommandStatementIngestvariant\nRepresents a SQL query. Used in the command member of …\nCommandStatementQueryvariant\nRepresents a Substrait plan. Used in the command member of …\nCommandStatementSubstraitPlanvariant\nRepresents a SQL update query. Used in the command member …\nCommandStatementUpdatevariant\nCommit the transaction.\nCreate the table if it does not exist\nAn <em>optional</em> response returned when <code>DoPut</code> is called with …\nDoPutPreparedStatementResultvariant\nReturned from the RPC call DoPut when a …\nDoPutUpdateResultvariant\nFail if the table does not exist\nFail if the table already exists\nWrapper around a fallible stream (one that returns errors) …\nRetrieves a UTF-8 string with the Arrow format version of …\nRetrieves a boolean value indicating whether the Flight …\nRetrieves a boolean value indicating whether the Flight …\nRetrieves a boolean value indicating whether transactions …\nRetrieves a UTF-8 string with the name of the Flight SQL …\nRetrieves a boolean value indicating whether the Flight …\nRetrieves a boolean value indicating whether the Flight …\nRetrieves an int32 indicating the timeout (in …\nRetrieves a boolean value indicating whether the Flight …\nRetrieves a string value indicating the maximum supported …\nRetrieves a string value indicating the minimum supported …\nRetrieves an int32 indicating whether the Flight SQL …\nRetrieves an int32 indicating the timeout (in …\nRetrieves a UTF-8 string with the native version of the …\nIndicates that the column can be used in a WHERE clause …\nUnknown/not indicated/no support\nIndicates that column cannot be used in a WHERE clause.\nIndicates that the fields does not allow the use of null …\nIndicates that the fields allow the use of null values.\nIndicates that nullability of the fields cannot be …\nProstMessageExt are useful utility methods for …\nDrop and recreate the table if it already exists\nRoll back the transaction.\nTransactions and savepoints\nRetrieves a boolean value indicating whether all tables …\nRetrieves the supported ANSI92 SQL grammar level.\nRetrieves a boolean value indicating whether this database …\nRetrieves a boolean value indicating whether a catalog …\nRetrieves a UTF-8 string with the preferred term for “…\nRetrieves the supported actions for a SQL schema.\nRetrieves a boolean value indicating whether correlated …\nRetrieves a boolean value indicating whether a data …\nRetrieves a boolean value indicating whether a data …\nRetrieves a UTF-8 string list with values of the supported …\nRetrieves a int64 value representing the maximum number of …\nRetrieves a boolean value indicating whether the Flight …\nRetrieves a boolean value indicating whether the Flight …\nIndicates whether the Flight SQL Server supports CREATE …\nRetrieves this database’s default transaction isolation …\nRetrieves a UTF-8 string with all the “extra” …\nRetrieves a int32 ordinal representing the case …\nRetrieves a UTF-8 string with the supported character(s) …\nOptions for CommandGetSqlInfo.\nRetrieves a UTF-8 string list with values of the supported …\nRetrieves a boolean value indicating whether updates made …\nRetrieves a int64 value representing the maximum number of …\nRetrieves a int64 value representing the maximum number of …\nRetrieves a int64 value representing the maximum number of …\nRetrieves a int64 value representing the maximum number of …\nRetrieves a int64 value representing the maximum number of …\nRetrieves a int64 value representing the maximum number of …\nRetrieves a int64 value representing the maximum number of …\nRetrieves a int64 value representing the maximum number of …\nRetrieves a int64 value representing the maximum number of …\nRetrieves a int64 value representing the maximum number of …\nRetrieves a int64 value the maximum number of characters …\nRetrieves a int64 value representing the maximum number of …\nRetrieves a int64 value representing the maximum number of …\nRetrieves a int64 value representing the maximum number of …\nRetrieves a boolean indicating whether the return value …\nRetrieves a int64 value representing the maximum number of …\nRetrieves a int64 value representing the maximum number of …\nRetrieves a int64 value representing the maximum number of …\nRetrieves a int64 value representing the maximum number of …\nRetrieves a int64 value representing the maximum number of …\nRetrieves a boolean value indicating whether named …\nRetrieves the null ordering.\nRetrieves a boolean value indicating whether …\nRetrieves a UTF-8 string list with values of the supported …\nRetrieves the support level for SQL OUTER JOINs.\nRetrieves a UTF-8 string with the preferred term for “…\nRetrieves a int32 describing the case sensitivity of …\nRetrieves a boolean value indicating whether this database …\nRetrieves a UTF-8 string with the preferred term for “…\nRetrieves the supported actions for a SQL schema.\nRetrieves the UTF-8 string that can be used to escape …\nRetrieves a boolean value indicating whether SELECT FOR …\nRetrieves a boolean value indicating whether invoking …\nRetrieves a boolean value indicating whether stored …\nRetrieves a UTF-8 string list with values of the supported …\nReturns an int32 bitmask value concurrency types supported …\nReturns an int32 bitmask value concurrency types supported …\nReturns an int32 bitmask value concurrency types supported …\nReturns an int32 bitmask value concurrency types supported …\nRetrieves the supported SQL grammar level as per the ODBC …\nRetrieves the supported GROUP BY commands;\nRetrieves the supported SQL positioned commands.\nRetrieves an int32 bitmask value representing the …\nRetrieves the supported SQL subqueries.\nThe level of support for Flight SQL transaction RPCs.\nRetrieves the supported transactions isolation levels.\nRetrieves the supported SQL UNIONs.\nRetrieves a boolean value indicating whether column …\nRetrieves a map where the key is the type to convert from …\nRetrieves a boolean value indicating whether, when table …\nRetrieves a boolean value indicating whether expressions …\nRetrieves a boolean value indicating whether the SQL …\nRetrieves a boolean value indicating whether specifying a …\nRetrieves a boolean value indicating whether columns may …\nRetrieves a boolean value indicating whether using a …\nRetrieves a boolean value indicating whether, when table …\nRetrieves a UTF-8 string list with values of the supported …\nRetrieves a boolean value indicating whether transactions …\nAn embedded message describing a Substrait plan to execute.\nOptions for table definition behavior\nThe action to take if the target table already exists\nThe action to take if the target table does not exist\nRepresents a ticket resulting from GetFlightInfo with a …\nTicketStatementQueryvariant\nTransactions, but not savepoints. A savepoint is a mark …\nAny message that is not any FlightSQL command.\nDo not use. Servers should error if this is specified by a …\nDo not use. Servers should error if this is specified by a …\nThe JDBC/ODBC-defined type of any object. All the values …\nDetailed subtype information for XDBC_TYPE_DATETIME and …\nWhether to commit/rollback the given transaction.\nWhether to rollback/release the given savepoint.\nConvert this Message to <code>Any</code>\nMacro to coerce a token to an item, specifically to build …\nSpecifies the Catalog to search for the tables. An empty …\nSpecifies the Catalog to search for the tables. An empty …\nSpecifies the catalog to search for the table. An empty …\nSpecifies the catalog to search for the foreign key table. …\nSpecifies the catalog to search for the primary key table. …\nThe catalog of the destination table to load data into. If …\nA FlightSQL Client <code>FlightSqlServiceClient</code>\nSpecifies the data type to search for the info.\nIf a result set generating query was provided, …\nSpecifies the schema to search for the table. An empty …\nSpecifies the schema to search for the foreign key table. …\nSpecifies the schema to search for the primary key table. …\nSpecifies a filter pattern for schemas to search for. When …\nSpecifies a filter pattern for schemas to search for. When …\nfallible stream\nThe catalog name where the foreign table is. An empty …\nThe schema name where the foreign table is. An empty …\nThe foreign table name. It cannot be null.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSpecifies if the Arrow schema should be returned for found …\nValues are modelled after ODBC’s SQLGetInfo() function. …\nThe result of the GetFlightInfo RPC that initiated the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert the command to <code>Any</code>.\nChecks whether the message is of type <code>M</code>\nBuilders and function for building responses to FlightSQL …\nName for the savepoint.\nCreate a FallibleRequestStream\nBackend-specific options.\nPacks a message into an <code>Any</code> message\nIf the query provided contained parameters, …\nThe catalog name where the parent table is. An empty …\nThe Schema name where the parent table is. An empty string …\nThe parent table name. It cannot be null.\nThe serialized substrait.Plan to create a prepared …\nThe serialized substrait.Plan to create a prepared …\nA serialized substrait.Plan\nOpaque handle for the prepared statement on the server.\nOpaque handle for the prepared statement on the server.\nOpaque handle for the prepared statement on the server.\nOpaque handle for the prepared statement on the server.\nRepresents a (potentially updated) opaque handle for the …\nThe valid SQL string to create a prepared statement for.\nThe SQL syntax.\nThe SQL syntax.\nThe number of records updated. A return value of -1 …\nOpaque handle for the savepoint on the server.\nOpaque handle for the savepoint on the server.\nThe db_schema of the destination table to load data into. …\nsender to notify error\nHelper trait <code>FlightSqlService</code> for implementing a …\nUnique identifier for the instance of the statement to …\nSpecifies the table to get the primary keys for.\nSpecifies the foreign key table to get the foreign keys …\nSpecifies the primary key table to get the foreign keys …\nThe table to load data into.\nThe behavior for handling the table definition.\nSpecifies a filter pattern for tables to search for. When …\nSpecifies a filter of table types which must match. The …\nStore ingested data in a temporary table. The effect of …\nCreate/execute the prepared statement as part of this …\nCreate/execute the prepared statement as part of this …\nThe transaction to which a savepoint belongs.\nOpaque handle for the transaction on the server.\nOpaque handle for the transaction on the server.\nInclude the query as part of this transaction (if unset, …\nInclude the query as part of this transaction (if unset, …\nInclude the query as part of this transaction (if unset, …\nPerform the ingestion as part of this transaction. If …\ntype_url for this Message\nGet the URL for the command.\nA URL/resource name that uniquely identifies the type of …\nUnpacks the contents of the message if it is of type <code>M</code>\nMust be a valid serialized protocol buffer of the above …\nThe Substrait release, e.g. “0.12.0”. This information …\nA polymorphic structure to natively represent different …\nA FlightSQLServiceClient is an endpoint for retrieving or …\nA PreparedStatement\nA record batch\nA schema\nExtract <code>Schema</code> or <code>RecordBatch</code>es from the <code>FlightData</code> wire …\nRequest to begin a transaction.\nClear the auth token.\nExplicitly shut down and clean up the client.\nClose the prepared statement, so that this …\nRetrieve the ResultSet schema from the query.\nDoAction allows a flight client to do a specific action …\nGiven a flight ticket, request to be sent the stream. …\nPush a stream to the flight service associated with a …\nRequest to commit/rollback a transaction.\nExecute a query on the server.\nExecutes the prepared statement query on the server.\nExecute a bulk ingest on the server and return the number …\nExecute a update query on the server, and return the …\nExecutes the prepared statement update query on the server.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRequest a list of catalogs as tabular FlightInfo results\nRetrieves a description of the foreign key columns in the …\nRequest a list of database schemas as tabular FlightInfo …\nRetrieves a description about the foreign key columns that …\nRetrieves the foreign key columns for the given table.\nRequest the primary keys for a table.\nRequest a list of SQL information.\nRequest a list of table types.\nRequest a list of tables.\nRequest XDBC SQL information.\nPerform a <code>handshake</code> with the server, passing credentials …\nReturn a reference to the underlying <code>FlightServiceClient</code>\nReturn a mutable reference to the underlying …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsume this client and return the underlying …\nCreates a new FlightSql client that connects to a server …\nCreates a new higher level client with the provided lower …\nRetrieve the parameter schema from the query.\nCreate a prepared statement object.\nSet header value.\nSet a RecordBatch that contains the parameters that will …\nSet auth token to the given value.\nShare the bearer token with potentially different <code>DoGet</code> …\nDecodes the app_metadata stored in a <code>PutResult</code> as a …\nSubmit parameters to the server, if any have been set on …\nRequest message for the “BeginSavepoint” action. …\nThe result of a “BeginSavepoint” action.\nRequest message for the “BeginTransaction” action. …\nThe result of a “BeginTransaction” action.\nRequest message for the “CancelQuery” action.\nThe result of cancelling a query.\nRequest message for the “ClosePreparedStatement” …\nRequest message for the “CreatePreparedStatement” …\nWrap the result of a “CreatePreparedStatement” or “…\nRequest message for the “CreatePreparedSubstraitPlan” …\nRequest message for the “EndSavepoint” action.\nRequest message for the “EndTransaction” action.\nIndicates that the column can be used In a WHERE clause …\nIndicates that the column can be used in a WHERE clause if …\nRepresents a request to retrieve the list of catalogs on a …\nRepresents a request to retrieve a description of the …\nRepresents a request to retrieve the list of database …\nRepresents a request to retrieve a description of the …\nRepresents a request to retrieve the foreign keys of a …\nRepresents a request to retrieve the primary keys of a …\nRepresents a metadata request. Used in the command member …\nRepresents a request to retrieve the list of table types …\nRepresents a request to retrieve the list of tables, and …\nRepresents a request to retrieve information about data …\nRepresents an instance of executing a prepared statement. …\nRepresents a SQL update query. Used in the command member …\nRepresents a bulk ingestion request. Used in the command …\nRepresents a SQL query. Used in the command member of …\nRepresents a Substrait plan. Used in the command member of …\nRepresents a SQL update query. Used in the command member …\nAn <em>optional</em> response returned when <code>DoPut</code> is called with …\nReturned from the RPC call DoPut when a …\nRetrieves a UTF-8 string with the Arrow format version of …\nRetrieves a boolean value indicating whether the Flight …\nRetrieves a boolean value indicating whether the Flight …\nRetrieves a boolean value indicating whether transactions …\nRetrieves a UTF-8 string with the name of the Flight SQL …\nRetrieves a boolean value indicating whether the Flight …\nRetrieves a boolean value indicating whether the Flight …\nRetrieves an int32 indicating the timeout (in …\nRetrieves a boolean value indicating whether the Flight …\nRetrieves a string value indicating the maximum supported …\nRetrieves a string value indicating the minimum supported …\nRetrieves an int32 indicating whether the Flight SQL …\nRetrieves an int32 indicating the timeout (in …\nRetrieves a UTF-8 string with the native version of the …\nIndicates that the column can be used in a WHERE clause …\nUnknown/not indicated/no support\nIndicates that column cannot be used in a WHERE clause.\nIndicates that the fields does not allow the use of null …\nIndicates that the fields allow the use of null values.\nIndicates that nullability of the fields cannot be …\nTransactions and savepoints\nRetrieves a boolean value indicating whether all tables …\nRetrieves the supported ANSI92 SQL grammar level.\nRetrieves a boolean value indicating whether this database …\nRetrieves a boolean value indicating whether a catalog …\nRetrieves a UTF-8 string with the preferred term for “…\nRetrieves the supported actions for a SQL schema.\nRetrieves a boolean value indicating whether correlated …\nRetrieves a boolean value indicating whether a data …\nRetrieves a boolean value indicating whether a data …\nRetrieves a UTF-8 string list with values of the supported …\nRetrieves a int64 value representing the maximum number of …\nRetrieves a boolean value indicating whether the Flight …\nRetrieves a boolean value indicating whether the Flight …\nIndicates whether the Flight SQL Server supports CREATE …\nRetrieves this database’s default transaction isolation …\nRetrieves a UTF-8 string with all the “extra” …\nRetrieves a int32 ordinal representing the case …\nRetrieves a UTF-8 string with the supported character(s) …\nOptions for CommandGetSqlInfo.\nRetrieves a UTF-8 string list with values of the supported …\nRetrieves a boolean value indicating whether updates made …\nRetrieves a int64 value representing the maximum number of …\nRetrieves a int64 value representing the maximum number of …\nRetrieves a int64 value representing the maximum number of …\nRetrieves a int64 value representing the maximum number of …\nRetrieves a int64 value representing the maximum number of …\nRetrieves a int64 value representing the maximum number of …\nRetrieves a int64 value representing the maximum number of …\nRetrieves a int64 value representing the maximum number of …\nRetrieves a int64 value representing the maximum number of …\nRetrieves a int64 value representing the maximum number of …\nRetrieves a int64 value the maximum number of characters …\nRetrieves a int64 value representing the maximum number of …\nRetrieves a int64 value representing the maximum number of …\nRetrieves a int64 value representing the maximum number of …\nRetrieves a boolean indicating whether the return value …\nRetrieves a int64 value representing the maximum number of …\nRetrieves a int64 value representing the maximum number of …\nRetrieves a int64 value representing the maximum number of …\nRetrieves a int64 value representing the maximum number of …\nRetrieves a int64 value representing the maximum number of …\nRetrieves a boolean value indicating whether named …\nRetrieves the null ordering.\nRetrieves a boolean value indicating whether …\nRetrieves a UTF-8 string list with values of the supported …\nRetrieves the support level for SQL OUTER JOINs.\nRetrieves a UTF-8 string with the preferred term for “…\nRetrieves a int32 describing the case sensitivity of …\nRetrieves a boolean value indicating whether this database …\nRetrieves a UTF-8 string with the preferred term for “…\nRetrieves the supported actions for a SQL schema.\nRetrieves the UTF-8 string that can be used to escape …\nRetrieves a boolean value indicating whether SELECT FOR …\nRetrieves a boolean value indicating whether invoking …\nRetrieves a boolean value indicating whether stored …\nRetrieves a UTF-8 string list with values of the supported …\nReturns an int32 bitmask value concurrency types supported …\nReturns an int32 bitmask value concurrency types supported …\nReturns an int32 bitmask value concurrency types supported …\nReturns an int32 bitmask value concurrency types supported …\nRetrieves the supported SQL grammar level as per the ODBC …\nRetrieves the supported GROUP BY commands;\nRetrieves the supported SQL positioned commands.\nRetrieves an int32 bitmask value representing the …\nRetrieves the supported SQL subqueries.\nThe level of support for Flight SQL transaction RPCs.\nRetrieves the supported transactions isolation levels.\nRetrieves the supported SQL UNIONs.\nRetrieves a boolean value indicating whether column …\nRetrieves a map where the key is the type to convert from …\nRetrieves a boolean value indicating whether, when table …\nRetrieves a boolean value indicating whether expressions …\nRetrieves a boolean value indicating whether the SQL …\nRetrieves a boolean value indicating whether specifying a …\nRetrieves a boolean value indicating whether columns may …\nRetrieves a boolean value indicating whether using a …\nRetrieves a boolean value indicating whether, when table …\nRetrieves a UTF-8 string list with values of the supported …\nRetrieves a boolean value indicating whether transactions …\nAn embedded message describing a Substrait plan to execute.\nRepresents a ticket resulting from GetFlightInfo with a …\nTransactions, but not savepoints. A savepoint is a mark …\nThe JDBC/ODBC-defined type of any object. All the values …\nDetailed subtype information for XDBC_TYPE_DATETIME and …\nReturns the enum value of <code>action</code>, or the default if the …\nReturns the enum value of <code>action</code>, or the default if the …\nWhether to commit/rollback the given transaction.\nWhether to rollback/release the given savepoint.\nNested message and enum types in <code>ActionCancelQueryResult</code>.\nNested message and enum types in <code>ActionEndSavepointRequest</code>.\nNested message and enum types in …\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nReturns the value of <code>catalog</code>, or the default value if …\nReturns the value of <code>catalog</code>, or the default value if …\nReturns the value of <code>catalog</code>, or the default value if …\nReturns the value of <code>catalog</code>, or the default value if …\nReturns the value of <code>catalog</code>, or the default value if …\nReturns the value of <code>catalog</code>, or the default value if …\nSpecifies the Catalog to search for the tables. An empty …\nSpecifies the Catalog to search for the tables. An empty …\nSpecifies the catalog to search for the table. An empty …\nSpecifies the catalog to search for the foreign key table. …\nSpecifies the catalog to search for the primary key table. …\nThe catalog of the destination table to load data into. If …\nNested message and enum types in <code>CommandStatementIngest</code>.\nReturns the value of <code>data_type</code>, or the default value if …\nSpecifies the data type to search for the info.\nIf a result set generating query was provided, …\nReturns the value of <code>db_schema</code>, or the default value if …\nReturns the value of <code>db_schema</code>, or the default value if …\nReturns the value of <code>db_schema</code>, or the default value if …\nSpecifies the schema to search for the table. An empty …\nSpecifies the schema to search for the foreign key table. …\nSpecifies the schema to search for the primary key table. …\nReturns the value of <code>db_schema_filter_pattern</code>, or the …\nReturns the value of <code>db_schema_filter_pattern</code>, or the …\nSpecifies a filter pattern for schemas to search for. When …\nSpecifies a filter pattern for schemas to search for. When …\nReturns the value of <code>fk_catalog</code>, or the default value if …\nThe catalog name where the foreign table is. An empty …\nReturns the value of <code>fk_db_schema</code>, or the default value if …\nThe schema name where the foreign table is. An empty …\nThe foreign table name. It cannot be null.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>SqlInfo</code>, or <code>None</code> if <code>value</code> is not a …\nConverts an <code>i32</code> to a <code>SqlSupportedTransaction</code>, or <code>None</code> if …\nConverts an <code>i32</code> to a <code>SqlSupportedCaseSensitivity</code>, or <code>None</code> …\nConverts an <code>i32</code> to a <code>SqlNullOrdering</code>, or <code>None</code> if <code>value</code> is …\nConverts an <code>i32</code> to a <code>SupportedSqlGrammar</code>, or <code>None</code> if <code>value</code> …\nConverts an <code>i32</code> to a <code>SupportedAnsi92SqlGrammarLevel</code>, or …\nConverts an <code>i32</code> to a <code>SqlOuterJoinsSupportLevel</code>, or <code>None</code> if …\nConverts an <code>i32</code> to a <code>SqlSupportedGroupBy</code>, or <code>None</code> if <code>value</code> …\nConverts an <code>i32</code> to a <code>SqlSupportedElementActions</code>, or <code>None</code> …\nConverts an <code>i32</code> to a <code>SqlSupportedPositionedCommands</code>, or …\nConverts an <code>i32</code> to a <code>SqlSupportedSubqueries</code>, or <code>None</code> if …\nConverts an <code>i32</code> to a <code>SqlSupportedUnions</code>, or <code>None</code> if <code>value</code> …\nConverts an <code>i32</code> to a <code>SqlTransactionIsolationLevel</code>, or <code>None</code> …\nConverts an <code>i32</code> to a <code>SqlSupportedTransactions</code>, or <code>None</code> if …\nConverts an <code>i32</code> to a <code>SqlSupportedResultSetType</code>, or <code>None</code> if …\nConverts an <code>i32</code> to a <code>SqlSupportedResultSetConcurrency</code>, or …\nConverts an <code>i32</code> to a <code>SqlSupportsConvert</code>, or <code>None</code> if <code>value</code> …\nConverts an <code>i32</code> to a <code>XdbcDataType</code>, or <code>None</code> if <code>value</code> is not …\nConverts an <code>i32</code> to a <code>XdbcDatetimeSubcode</code>, or <code>None</code> if <code>value</code> …\nConverts an <code>i32</code> to a <code>Nullable</code>, or <code>None</code> if <code>value</code> is not a …\nConverts an <code>i32</code> to a <code>Searchable</code>, or <code>None</code> if <code>value</code> is not a …\nConverts an <code>i32</code> to a <code>UpdateDeleteRules</code>, or <code>None</code> if <code>value</code> …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nSpecifies if the Arrow schema should be returned for found …\nValues are modelled after ODBC’s SQLGetInfo() function. …\nThe result of the GetFlightInfo RPC that initiated the …\nCalls <code>U::from(self)</code>.\nCreate a builder suitable for constructing a response\nCreate a builder suitable for constructing a response\nCreate a builder suitable for constructing a response\nCreate a builder suitable for constructing a response\nCreate a builder suitable for constructing a response\nCreate a builder suitable for constructing a response\nReturns <code>true</code> if <code>value</code> is a variant of <code>SqlInfo</code>.\nReturns <code>true</code> if <code>value</code> is a variant of …\nReturns <code>true</code> if <code>value</code> is a variant of …\nReturns <code>true</code> if <code>value</code> is a variant of <code>SqlNullOrdering</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>SupportedSqlGrammar</code>.\nReturns <code>true</code> if <code>value</code> is a variant of …\nReturns <code>true</code> if <code>value</code> is a variant of …\nReturns <code>true</code> if <code>value</code> is a variant of <code>SqlSupportedGroupBy</code>.\nReturns <code>true</code> if <code>value</code> is a variant of …\nReturns <code>true</code> if <code>value</code> is a variant of …\nReturns <code>true</code> if <code>value</code> is a variant of …\nReturns <code>true</code> if <code>value</code> is a variant of <code>SqlSupportedUnions</code>.\nReturns <code>true</code> if <code>value</code> is a variant of …\nReturns <code>true</code> if <code>value</code> is a variant of …\nReturns <code>true</code> if <code>value</code> is a variant of …\nReturns <code>true</code> if <code>value</code> is a variant of …\nReturns <code>true</code> if <code>value</code> is a variant of <code>SqlSupportsConvert</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>XdbcDataType</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>XdbcDatetimeSubcode</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>Nullable</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>Searchable</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>UpdateDeleteRules</code>.\nName for the savepoint.\nBackend-specific options.\nIf the query provided contained parameters, …\nReturns the value of <code>pk_catalog</code>, or the default value if …\nThe catalog name where the parent table is. An empty …\nReturns the value of <code>pk_db_schema</code>, or the default value if …\nThe Schema name where the parent table is. An empty string …\nThe parent table name. It cannot be null.\nThe serialized substrait.Plan to create a prepared …\nThe serialized substrait.Plan to create a prepared …\nA serialized substrait.Plan\nReturns the value of <code>prepared_statement_handle</code>, or the …\nOpaque handle for the prepared statement on the server.\nOpaque handle for the prepared statement on the server.\nOpaque handle for the prepared statement on the server.\nOpaque handle for the prepared statement on the server.\nRepresents a (potentially updated) opaque handle for the …\nThe valid SQL string to create a prepared statement for.\nThe SQL syntax.\nThe SQL syntax.\nThe number of records updated. A return value of -1 …\nReturns the enum value of <code>result</code>, or the default if the …\nOpaque handle for the savepoint on the server.\nOpaque handle for the savepoint on the server.\nReturns the value of <code>schema</code>, or the default value if <code>schema</code>…\nThe db_schema of the destination table to load data into. …\nSets <code>action</code> to the provided enum value.\nSets <code>action</code> to the provided enum value.\nSets <code>result</code> to the provided enum value.\nUnique identifier for the instance of the statement to …\nSpecifies the table to get the primary keys for.\nSpecifies the foreign key table to get the foreign keys …\nSpecifies the primary key table to get the foreign keys …\nThe table to load data into.\nThe behavior for handling the table definition.\nReturns the value of <code>table_name_filter_pattern</code>, or the …\nSpecifies a filter pattern for tables to search for. When …\nSpecifies a filter of table types which must match. The …\nStore ingested data in a temporary table. The effect of …\nReturns the value of <code>transaction_id</code>, or the default value …\nReturns the value of <code>transaction_id</code>, or the default value …\nReturns the value of <code>transaction_id</code>, or the default value …\nReturns the value of <code>transaction_id</code>, or the default value …\nReturns the value of <code>transaction_id</code>, or the default value …\nReturns the value of <code>transaction_id</code>, or the default value …\nCreate/execute the prepared statement as part of this …\nCreate/execute the prepared statement as part of this …\nThe transaction to which a savepoint belongs.\nOpaque handle for the transaction on the server.\nOpaque handle for the transaction on the server.\nInclude the query as part of this transaction (if unset, …\nInclude the query as part of this transaction (if unset, …\nInclude the query as part of this transaction (if unset, …\nPerform the ingestion as part of this transaction. If …\nThe Substrait release, e.g. “0.12.0”. This information …\nThe cancellation request is complete. Subsequent requests …\nThe cancellation request is in progress. The client may …\nThe query is not cancellable. The client should not retry …\nThe cancellation status is unknown. Servers should avoid …\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>CancelResult</code>, or <code>None</code> if <code>value</code> is not …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>CancelResult</code>.\nRelease the savepoint.\nRoll back to a savepoint.\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>EndSavepoint</code>, or <code>None</code> if <code>value</code> is not …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>EndSavepoint</code>.\nCommit the transaction.\nRoll back the transaction.\nString value of the enum field names used in the ProtoBuf …\nConverts an <code>i32</code> to a <code>EndTransaction</code>, or <code>None</code> if <code>value</code> is …\nCreates an enum from field names used in the ProtoBuf …\nReturns <code>true</code> if <code>value</code> is a variant of <code>EndTransaction</code>.\nOptions for table definition behavior\nReturns the enum value of <code>if_exists</code>, or the default if the …\nReturns the enum value of <code>if_not_exist</code>, or the default if …\nSets <code>if_exists</code> to the provided enum value.\nSets <code>if_not_exist</code> to the provided enum value.\nNested message and enum types in <code>TableDefinitionOptions</code>.\nAppend to the table if it already exists\nCreate the table if it does not exist\nFail if the table does not exist\nFail if the table already exists\nDrop and recreate the table if it already exists\nThe action to take if the target table already exists\nThe action to take if the target table does not exist\nDo not use. Servers should error if this is specified by a …\nDo not use. Servers should error if this is specified by a …\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nConverts an <code>i32</code> to a <code>TableNotExistOption</code>, or <code>None</code> if <code>value</code> …\nConverts an <code>i32</code> to a <code>TableExistsOption</code>, or <code>None</code> if <code>value</code> …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nReturns <code>true</code> if <code>value</code> is a variant of <code>TableNotExistOption</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>TableExistsOption</code>.\nA builder for a <code>CommandGetCatalogs</code> response.\nA builder for a <code>CommandGetDbSchemas</code> response.\nA builder for a <code>CommandGetTables</code> response.\nA builder for <code>SqlInfoData</code> which is used to create …\nHelper to create <code>CommandGetSqlInfo</code> responses.\nData structure representing type information for xdbc …\nHelper to create <code>CommandGetXdbcTypeInfo</code> responses.\nA builder for <code>XdbcTypeInfoData</code> which is used to create …\nWhether the type is auto-incrementing\nWhether the type is case sensitive\nThe column size of the type\nThe create parameters of the type\nThe data type of the type\nThe optional datetime subcode of the type\n<code>GetDbSchemasBuilder</code> for building responses to …\nWhether the type has fixed precision and scale\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nUse BTreeMap to ensure the values are sorted by value as …\nThe interval precision of the type\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHelper function to sort all the columns in an array\nThe prefix of the type\nThe suffix of the type\nThe local type name of the type\nThe maximum scale of the type\nThe minimum scale of the type\nThe nullability of the type\nThe number precision radix of the type\nWhether the type is searchable\nThe SQL data type of the type\nHelpers for building responses to <code>CommandGetSqlInfo</code> …\n<code>GetTableTypesBuilder</code> for building responses to …\n<code>GetTablesBuilder</code> for building responses to <code>CommandGetTables</code>…\nThe name of the type\nWhether the type is unsigned\nHelpers for <code>CommandGetXdbcTypeInfo</code> metadata requests.\nThe schema for GetCatalogs\nA builder for a <code>CommandGetCatalogs</code> response.\nAppend a row\nbuilds a <code>RecordBatch</code> with the correct schema for a …\nCreate a new instance of <code>GetCatalogsBuilder</code>\nReturns the schema that will result from <code>CommandGetCatalogs</code>\nThe schema for GetDbSchemas\nA builder for a <code>CommandGetDbSchemas</code> response.\nAppend a row\nbuilds a <code>RecordBatch</code> with the correct schema for a …\nCreate a new instance of <code>GetDbSchemasBuilder</code>\nReturn the schema of the RecordBatch that will be returned …\nA builder for a <code>CommandGetSqlInfo</code> response.\nA builder for <code>SqlInfoData</code> which is used to create …\nHelper to create <code>CommandGetSqlInfo</code> responses.\nSomething that can be converted into u32 (the …\nHandles creating the dense <code>UnionArray</code> described by …\nRepresents a dynamic value\n<code>DataType</code> for the output union array\nregister the specific sql metadata item\nAppend the specified value to this builder\nBuilds a <code>RecordBatch</code> with the correct schema for a …\nEncode the contents of this list according to the …\nComplete the construction and build the <code>UnionArray</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nrequested <code>SqlInfo</code>s. If empty means return all infos.\nUse BTreeMap to ensure the values are sorted by value as …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new SQL info builder\nReturn a  <code>RecordBatch</code> containing only the requested <code>u32</code>, …\nReturns the DataType created by this builder\nReturn the schema of the RecordBatch that will be returned …\nReturn the schema of the RecordBatch that will be returned …\nReturn the <code>Schema</code> for a GetSchema RPC call with …\nThe schema for <code>CommandGetTableTypes</code>.\nA builder for a <code>CommandGetTableTypes</code> response.\nAppend a row\nbuilds a <code>RecordBatch</code> with the correct schema for a …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreate a new instance of <code>GetTableTypesBuilder</code>\nReturn the schema of the RecordBatch that will be returned …\nThe schema for GetTables without <code>table_schema</code> column\nThe schema for GetTables with <code>table_schema</code> column\nA builder for a <code>CommandGetTables</code> response.\nAppend a row\nbuilds a <code>RecordBatch</code> for <code>CommandGetTables</code>\nShould the “schema” column be included\nCreate a new instance of <code>GetTablesBuilder</code>\nReturn the schema of the RecordBatch that will be returned …\nThe schema for GetXdbcTypeInfo\nA builder for a <code>CommandGetXdbcTypeInfo</code> response.\nData structure representing type information for xdbc …\nHelper to create <code>CommandGetXdbcTypeInfo</code> responses.\nA builder for <code>XdbcTypeInfoData</code> which is used to create …\nAppend a new row\nWhether the type is auto-incrementing\nCreate helper structure for handling xdbc metadata …\nBuilds a <code>RecordBatch</code> with the correct schema for a …\nWhether the type is case sensitive\nThe column size of the type\nThe create parameters of the type\nThe data type of the type\nThe optional datetime subcode of the type\nWhether the type has fixed precision and scale\nReturns the argument unchanged.\nThe interval precision of the type\nCalls <code>U::from(self)</code>.\nThe prefix of the type\nThe suffix of the type\nThe local type name of the type\nThe maximum scale of the type\nThe minimum scale of the type\nCreate a new instance of <code>XdbcTypeInfoDataBuilder</code>.\nThe nullability of the type\nThe number precision radix of the type\nReturn the raw (not encoded) RecordBatch that will be …\nReturn the schema of the RecordBatch that will be returned …\nReturn the <code>Schema</code> for a GetSchema RPC call with …\nReturn the schema of the RecordBatch that will be returned …\nWhether the type is searchable\nThe SQL data type of the type\nThe name of the type\nWhether the type is unsigned\nUnrecoverable errors associated with <code>do_put</code> requests\nWhen impl FlightSqlService, you can always set …\nImplements FlightSqlService to handle the flight sql …\nThe first element in the request stream is missing the …\nThe first element in the request stream is missing the …\nA wrapper around <code>Streaming&lt;FlightData&gt;</code> that allows “…\nBegin a savepoint\nBegin a transaction\nCancel a query\nClose a prepared statement.\nCreate a prepared statement from given SQL statement.\nCreate a prepared substrait plan.\nEnd a savepoint\nEnd a transaction\nImplementors may override to handle additional calls to …\ndo_exchange Implementors may override to handle additional …\nGet a FlightDataStream containing the list of catalogs.\nGet a FlightDataStream containing the data related to the …\nGet a FlightDataStream containing the data related to the …\nImplementors may override to handle additional calls to …\nGet a FlightDataStream containing the data related to the …\nGet a FlightDataStream containing the prepared statement …\nGet a FlightDataStream containing the data related to the …\nGet a FlightDataStream containing the list of schemas.\nGet a FlightDataStream containing the list of SqlInfo …\nGet a FlightDataStream containing the query results.\nGet a FlightDataStream containing the data related to the …\nGet a FlightDataStream containing the list of tables.\nGet a FlightDataStream containing the data related to the …\nAccept authentication and return a token …\nImplementors may override to handle do_put errors\nImplementors may override to handle additional calls to …\nBind parameters to given prepared statement.\nExecute an update SQL prepared statement.\nExecute a bulk ingestion.\nExecute an update SQL statement.\nExecute a substrait plan\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a FlightInfo for listing catalogs.\nGet a FlightInfo to extract information about cross …\nGet a FlightInfo to extract information about exported …\nImplementors may override to handle additional calls to …\nGet a FlightInfo to extract information about imported …\nGet a FlightInfo for executing an already created prepared …\nGet a FlightInfo to extract information about primary and …\nGet a FlightInfo for listing schemas.\nGet a FlightInfo for retrieving other information (See …\nGet a FlightInfo for executing a SQL query.\nGet a FlightInfo for executing a substrait plan.\nGet a FlightInfo to extract information about the table …\nGet a FlightInfo for listing tables.\nGet a FlightInfo to extract information about the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert this stream into a <code>Streaming&lt;FlightData&gt;</code>. Any …\nConvert this stream into a <code>Peekable&lt;Streaming&lt;FlightData&gt;&gt;</code>.\nAdd custom actions to list_actions() result\nPeek at the head of this stream without advancing it.\nRegister a new SqlInfo result, making it available when …\nWrapper around a fallible stream (one that returns errors) …\nWrapper for a tonic response stream that maps errors to …\nfallible stream\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReceiver for FlightError\nTonic response stream\nsender to notify error\nStream that stores the gRPC trailers into <code>LazyTrailers</code>.\ngRPC trailers that are extracted by <code>ExtractTrailersStream</code>.\nExtract <code>LazyTrailers</code> from <code>Streaming</code> tonic response.\nReturns the argument unchanged.\nReturns the argument unchanged.\ngRPC trailers that are known at the end of a stream.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert <code>RecordBatch</code>es to wire protocol <code>FlightData</code>s\nConvert <code>FlightData</code> (with supplied schema and dictionaries) …\nConvert a slice of wire protocol <code>FlightData</code>s into a vector …")