searchState.loadedDescShard("arrow_integration_testing", 0, "Common code used in the integration test binaries\nThe expected password for the basic auth integration test.\nThe expected username for the basic auth integration test.\nAn Arrow file in JSON format\nA C-ABI for exporting a RecordBatch from a JSON file\nA C-ABI for exporting an Arrow schema from a JSON file\nA C-ABI to compare a RecordBatch against a JSON file\nA C-ABI to compare an Arrow schema against a JSON file\nRelease a const char* exported by result_to_c_error()\nCanonicalize the names of map fields in a schema\nC Data Integration entrypoint to export a batch from a …\nC Data Integration entrypoint to export the schema from a …\nCollection of utilities for testing the Flight client.\nCollection of utilities for testing the Flight server.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRead an Arrow file in JSON format\nRead a single RecordBatch from the file\nRead all RecordBatches from the file\nRead gzipped JSON test file\nThe schema of the file\nScenario for testing basic auth.\nIntegration tests for the Flight client.\nScenario for testing middleware.\nContains the error value\nContains the success value\nRun a scenario that tests basic auth.\nContains the error value\nContains the success value\nRun a scenario that uploads data to a Flight server and …\nContains the error value\nContains the success value\nRun a scenario that tests middleware.\nContains the error value\nContains the success value\nBasic auth test for the Flight server.\nCreate a FlightEndpoint with a ticket and location\nIntegration tests for the Flight server.\nListen on a port and return the address\nMiddleware test for the Flight server.\nScenario for testing basic auth.\nContains the error value\nContains the success value\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRun a scenario that tests basic auth.\nContains the error value\nFlight service implementation for integration testing\nContains the success value\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRun a scenario that tests integration testing.\nContains the error value\nMiddleware interceptor for testing\nContains the success value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRun a scenario that tests middleware.")